[defaults]

# (boolean) Sets the default value for the any_errors_fatal keyword,
# if True, Task failures will be considered fatal errors.
any_errors_fatal=False

# (string) When a collection is loaded that does not support the
# running Ansible version (via the collection metadata key
# `requires_ansible`), the default behavior is to issue a warning and
# continue anyway. Setting this value to `ignore` skips the warning
# entirely, while setting it to `fatal` will immediately halt Ansible
# execution.
;collections_on_ansible_version_mismatch=fatal

# (boolean) Ansible can issue a warning when the shell or command
# module is used and the command appears to be similar to an existing
# Ansible module.  These warnings can be silenced by adjusting this
# setting to False. You can also control this at the task level with
# the module option ``warn``.  As of version 2.11, this is disabled by
# default.
command_warnings=True

# (boolean) Toggles debug output in Ansible. This is *very* verbose
# and can hinder multiprocessing.  Debug output can also include
# secret information despite no_log settings being enabled, which
# means debug mode should not be used in production.
debug=False

# (boolean) When True, this causes ansible templating to fail steps
# that reference variable names that are likely typoed.  Otherwise,
# any '{{ template_expression }}' that contains undefined variables
# will be rendered in a template or ansible action line exactly as
# written.
error_on_undefined_vars=True

[inventory]

# (list) List of enabled inventory plugins, it also determines the
# order in which they are used.
enable_plugins=community.libvirt.libvirt, host_list, script, auto, yaml, ini, toml
